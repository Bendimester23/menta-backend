datasource db {
    provider = "postgres"
    url      = "postgresql://postgres:admin@localhost:5432/bluementa"
}

generator db {
    provider = "go run github.com/prisma/prisma-client-go"
    package  = "db"
}

model User {
    id           String         @id @default(cuid())
    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @updatedAt
    username     String         @unique
    email        String         @unique
    password     String
    isTeacher    Boolean        @default(false)
    verified     Boolean        @default(false)
    emailCode    String         @default("6969")
    refreshToken RefreshToken[]
    groups       GroupMember[]
    solutions    SolvedExam[]
}

model Group {
    id              String        @id @default(cuid())
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt
    name            String        @unique
    codeLogin       Boolean
    loginCode       String
    requiresAproval Boolean
    members         GroupMember[]
    exams           Exam[]
}

model RefreshToken {
    id          String   @id @default(cuid())
    createdAt   DateTime @default(now())
    refreshedAt DateTime @updatedAt
    owner       User     @relation(fields: [userId], references: [id])
    userId      String   @unique
}

model GroupMember {
    group   Group   @relation(fields: [groupId], references: [id])
    groupId String
    user    User    @relation(fields: [userId], references: [id])
    userId  String
    waiting Boolean
    leader  Boolean

    @@id([groupId, userId])
}

model SolvedExam {
    user   User   @relation(fields: [userId], references: [id])
    userId String
    exam   Exam   @relation(fields: [examId], references: [id])
    examId String

    answers  Json
    started  DateTime
    finished DateTime

    @@id([examId, userId])
}

model Exam {
    id          String   @id @default(cuid())
    group       Group    @relation(fields: [groupId], references: [id])
    groupId     String
    title       String
    description String
    questions   Json
    answers     Json
    startsAt    DateTime
    endsAt      DateTime
    maxLenght   Int

    solutions SolvedExam[]
}
